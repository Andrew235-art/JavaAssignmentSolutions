<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/></head><body>// 1. Hello, World! Program public class HelloWorld { public static void main(String[] args) { <a href="http://System.out.println">System.out.println</a>("Hello, World!"); } } <br><br>// 2. Area of a Circle public class AreaOfCircle { public static void main(String[] args) { double radius = <a href="tel:5.0">5.0</a>; // Example radius double area = <a href="http://Math.PI">Math.PI</a> * radius * radius; int areaAsInt = (int) area; // Type casting to integer <a href="http://System.out.println">System.out.println</a>("Area as integer: " + areaAsInt); } }<br><br> // 3. Voting Eligibility public class VotingEligibility { public static void main(String[] args) { int age = 20; // Example age if (age &gt;= 18) { <a href="http://System.out.println">System.out.println</a>("You are eligible to vote."); } else { <a href="http://System.out.println">System.out.println</a>("You are not eligible to vote."); } } } <br><br>// 4. Multiplication Table import <a href="http://java.util.Scanner">java.util.Scanner</a>; public class MultiplicationTable { public static void main(String[] args) { Scanner scanner = new Scanner(<a href="http://System.in">System.in</a>); <a href="http://System.out.print">System.out.print</a>("Enter a number: "); int number = <a href="http://scanner.nextInt">scanner.nextInt</a>(); for (int i = 1; i &lt;= 10; i++) { <a href="http://System.out.println">System.out.println</a>(number + " x " + i + " = " + (number * i)); } } } <br><br>// 5. Method Overloading public class Greeting { public static void main(String[] args) { greetUser("John"); greetUser(); // Guest greeting } public static void greetUser(String name) { <a href="http://System.out.println">System.out.println</a>("Hello, " + name + "!"); } public static void greetUser() { <a href="http://System.out.println">System.out.println</a>("Hello, Guest!"); } } <br><br>// 6. Array Manipulation public class StudentScores { public static void main(String[] args) { int[] scores = {85, 90, 78, 92, 88}; int sum = 0; int highest = scores[0]; int lowest = scores[0]; for (int score : scores) { sum += score; if (score &gt; highest) highest = score; if (score &lt; lowest) lowest = score; } double average = sum / (double) <a href="http://scores.length">scores.length</a>; <a href="http://System.out.println">System.out.println</a>("Average Score: " + average); <a href="http://System.out.println">System.out.println</a>("Highest Score: " + highest); <a href="http://System.out.println">System.out.println</a>("Lowest Score: " + lowest); } } <br><br>// 7. String Operations import <a href="http://java.util.Scanner">java.util.Scanner</a>; public class StringOperations { public static void main(String[] args) { Scanner scanner = new Scanner(<a href="http://System.in">System.in</a>); <a href="http://System.out.print">System.out.print</a>("Enter a string: "); String input = <a href="http://scanner.nextLine">scanner.nextLine</a>(); String upperCase = <a href="http://input.toUpperCase">input.toUpperCase</a>(); int length = <a href="http://input.length">input.length</a>(); String substring = <a href="http://input.substring">input.substring</a>(2, 5); // From index 2 to 4 <a href="http://System.out.println">System.out.println</a>("Uppercase: " + upperCase); <a href="http://System.out.println">System.out.println</a>("Length: " + length); <a href="http://System.out.println">System.out.println</a>("Substring (3rd to 5th char): " + substring); } } <br><br>// 8. Book Class with Constructors public class Book { private String title; private String author; private double price; // Constructor with all attributes public Book(String title, String author, double price) { <a href="http://this.title">this.title</a> = title; <a href="http://this.author">this.author</a> = author; <a href="http://this.price">this.price</a> = price; } // Constructor with title and author only public Book(String title, String author) { this(title, author, 0); // Default price to $0 } public void displayDetails() { <a href="http://System.out.println">System.out.println</a>("Title: " + title + ", Author: " + author + ", Price: $" + price); } public static void main(String[] args) { Book book1 = new Book("Java Programming", "John Doe", <a href="tel:29.99">29.99</a>); <a href="http://book1.displayDetails">book1.displayDetails</a>(); Book book2 = new Book("Python Programming", "Jane Doe"); <a href="http://book2.displayDetails">book2.displayDetails</a>(); } } <br><br>// 9. File Handling with Exception Handling import <a href="http://java.io.File">java.io.File</a>; import <a href="http://java.io.FileNotFoundException">java.io.FileNotFoundException</a>; import <a href="http://java.util.Scanner">java.util.Scanner</a>; public class FileReaderExample { public static void main(String[] args) { try { File file = new File("<a href="http://data.txt">data.txt</a>"); Scanner scanner = new Scanner(file); while (<a href="http://scanner.hasNextLine">scanner.hasNextLine</a>()) { String line = <a href="http://scanner.nextLine">scanner.nextLine</a>(); <a href="http://System.out.println">System.out.println</a>(line); } <a href="http://scanner.close">scanner.close</a>(); } catch (FileNotFoundException e) { <a href="http://System.out.println">System.out.println</a>("File not found."); } } } <br><br>// 10. Using HashMap with Generics import <a href="http://java.util.HashMap">java.util.HashMap</a>; public class StudentScoresMap { public static void main(String[] args) { HashMap&lt;String, Integer&gt; studentScores = new HashMap&lt;&gt;(); <a href="http://studentScores.put">studentScores.put</a>("Alice", 85); <a href="http://studentScores.put">studentScores.put</a>("Bob", 90); <a href="http://studentScores.put">studentScores.put</a>("Charlie", 78); for (String name : <a href="http://studentScores.keySet">studentScores.keySet</a>()) { <a href="http://System.out.println">System.out.println</a>(name + ": " + <a href="http://studentScores.get">studentScores.get</a>(name)); } } }</body></html>